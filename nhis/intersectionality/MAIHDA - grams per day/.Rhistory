install.packages("catepillarR")
library(tidyverse)
library(readr)
library(tidyr)
library(dplyr)
library(labelled)
library(haven)
library(ggplot2)
library(forcats)
library(patchwork)
library(catepillarR)
install.packages("caterpillarR")
install.packages("caterpillarR")
## Bias toward non-scientific notation
options(scipen=10)
# Set default theme for plots:
theme_set(theme_bw(base_size = 12))
# Read in data
data <- read_rds("C:/Users/cmp21seb/Documents/SIMAH/SIMAH_workplace/nhis/intersectionality/results tables/MAIHDA_transformed_estimates_grams_MCMC.rds")
# Generate columns for race, sex, education and generation (as want them named in the graph) from column 'intersectional names'
data <- data %>%
mutate(sex=ifelse(grepl("F",intersectional_names),"Female","Male"),
race=ifelse(grepl("Non-Hispanic Asian",intersectional_names),"Asian",
ifelse(grepl("Non-Hispanic Black", intersectional_names),"Black",
ifelse(grepl("Non-Hispanic Other", intersectional_names), "Other",
ifelse(grepl("White", intersectional_names), "White","Hispanic")))),
education=ifelse(grepl("low edu.", intersectional_names), "low edu.",
ifelse(grepl("med. edu.", intersectional_names), "medium edu.", "high edu.")),
education=factor(education,levels=c("low edu.", "medium edu.", "high edu.")))
# Create a catepillar plot of the level 2 residuals
caterpillarR(resi, lev = 2)
library(R2MLwiN)
# Create a catepillar plot of the level 2 residuals
caterpillarR(resi, lev = 2)
# read in model object
VarCompResidMCMC <- readRDS("C:/Users/cmp21seb/Documents/SIMAH/SIMAH_workplace/nhis/intersectionality/models/grams_MCMC_full.RDS")
# generate plot
caterpillarR(resi, lev = 2)
# generate plot
caterpillarR(VarCompResidMCMC['residual'], lev = 2)
# Plots of residuals (log transformed)
male_residuals_log <- data %>%
filter(sex=="Male") %>%
ggplot(aes(x=age_3_cats, y=residuals, colour=decade)) +
geom_point(position=position_dodge(width=0.8)) +
geom_errorbar(aes(ymin = residuals - (1.96*residualsSE),
ymax = residuals + (1.96*residualsSE)),
position=position_dodge(width=0.8)) +
facet_grid(cols=vars(education),rows=vars(race)) +
theme(axis.title.x = element_blank(), legend.position = "bottom") +
geom_hline(yintercept=0, linetype="dashed", color = "red") +
ggtitle("Males: Residuals (log)")
male_residuals_log
female_residuals_log <- data %>%
filter(sex=="Female") %>%
ggplot(aes(x=age_3_cats, y=residuals, colour=decade)) +
geom_point(position=position_dodge(width=0.8)) +
geom_errorbar(aes(ymin = residuals - (1.96*residualsSE),
ymax = residuals + (1.96*residualsSE)),
position=position_dodge(width=0.8)) +
facet_grid(cols=vars(education),rows=vars(race)) +
theme(axis.title.x = element_blank(), legend.position = "bottom") +
geom_hline(yintercept=0, linetype="dashed", color = "red") +
ggtitle("Females: Residuals (log)")
female_residuals_log
# Count number of intersections with residual CIs that don't include 0
interactions <- data %>%
mutate(
residual_lower_CI = residuals - (1.96*residualsSE),
residual_upper_CI = residuals + (1.96*residualsSE),
significance_and_direction = case_when(residual_lower_CI > 0 & residual_upper_CI > 0 ~ "yes_drinks_more",
residual_lower_CI < 0 & residual_upper_CI < 0 ~ "yes_drinks_less",
residual_lower_CI < 0 & residual_upper_CI > 0 ~ "no"))
interactions <- interactions %>%
filter(significance_and_direction!="no") %>%
select(intersections, sex, decade, race, age_3_cats, education, residual_lower_CI, residual_upper_CI, significance_and_direction)
View(interactions)
# read in model object
VarCompResidMCMC <- readRDS("C:/Users/cmp21seb/Documents/SIMAH/SIMAH_workplace/nhis/intersectionality/models/grams_MCMC_full.RDS")
# generate plot
caterpillarR(VarCompResidMCMC['residual'], lev = 2)
# generate plot
caterpillarR(VarCompResidMCMC['residual'], lev = 2) +
title("Residuals, indicative of interaction effect")
caterpillarR(VarCompResidMCMC['residual'], lev = 2, main="Residuals, indicative of interaction effect")
caterpillarR(VarCompResidMCMC['residual'], lev = 2)
title("Residuals, indicative of interaction effect")
plot <- caterpillarR(VarCompResidMCMC['residual'], lev = 2)
plot + title("Residuals, indicative of interaction effect")
title(main = "Residuals, indicative of interaction effect")
# Generate the caterpillar plot
caterpillarR(VarCompResidMCMC['residual'], lev = 2)
# Call plot.new() to initialize the plot
plot.new()
# Add a title to the plot using base R functions
title(main = "Residuals, indicative of interaction effect")
caterpillarR(VarCompResidMCMC['residual'], lev = 2)
# Create an empty plot with the desired title
plot(1, type = "n", main = "Residuals, indicative of interaction effect")
# Generate the caterpillar plot within the empty plot
caterpillarR(VarCompResidMCMC['residual'], lev = 2, add = TRUE)
caterpillarR(VarCompResidMCMC['residual'], lev = 2)
help(caterpillarR)
caterpillar(y=residuals[rankno],x=1:65,qtlow=(residuals-residualsCI)[rankno], qtup=(residuals+residualsCI)[rankno],xlab='Rank',ylab='Intercept')
#Foreachschool,calculatetheCIs...
residuals<-VarCompResidMCMC@residual$lev_2_resi_est_Intercept
residualsCI<-1.96*sqrt(VarCompResidMCMC@residual$lev_2_resi_var_Intercept)
View(VarCompResidMCMC)
#Foreachschool,calculatetheCIs...
residuals<-VarCompResidMCMC@residual$lev_2_resi_est_Intercept
residualsCI<-1.96*sqrt(VarCompResidMCMC@residual$lev_2_resi_variance_Intercept)
residualsRank<-rank(residuals) rankno<-order(residualsRank)
#Foreachschool,calculatetheCIs...
residuals<-VarCompResidMCMC@residual$lev_2_resi_est_Intercept
residualsCI<-1.96*sqrt(VarCompResidMCMC@residual$lev_2_resi_variance_Intercept)
residualsRank<-rank(residuals)
rankno<-order(residualsRank)
caterpillar(y=residuals[rankno],x=1:65,qtlow=(residuals-residualsCI)[rankno],
qtup=(residuals+residualsCI)[rankno],xlab='Rank',ylab='Intercept')
#Foreachschool,calculatetheCIs...
residuals<-VarCompResidMCMC@residual$lev_2_resi_est_Intercept
residualsCI<-1.96*sqrt(VarCompResidMCMC@residual$lev_2_resi_variance_Intercept)
residualsRank<-rank(residuals)
rankno<-order(residualsRank)
caterpillar(y=residuals[rankno],x=1:180,qtlow=(residuals-residualsCI)[rankno],
qtup=(residuals+residualsCI)[rankno],xlab='Rank',ylab='Intercept')
#Foreachschool,calculatetheCIs...
residuals<-VarCompResidMCMC@residual$lev_2_resi_est_Intercept
residualsCI<-1.96*sqrt(VarCompResidMCMC@residual$lev_2_resi_variance_Intercept)
residualsRank<-rank(residuals)
rankno<-order(residualsRank)
caterpillar(y=residuals[rankno],x=1:180,qtlow=(residuals-residualsCI)[rankno],
qtup=(residuals+residualsCI)[rankno],xlab='Intersections, ranked by residual size',ylab='Residual')
residuals<-VarCompResidMCMC@residual$lev_2_resi_est_Intercept
residualsCI<-1.96*sqrt(VarCompResidMCMC@residual$lev_2_resi_variance_Intercept)
residualsRank<-rank(residuals)
rankno<-order(residualsRank)
caterpillar(y=residuals[rankno],x=1:180,qtlow=(residuals-residualsCI)[rankno],
qtup=(residuals+residualsCI)[rankno],xlab='Intersectional groups (n=180',ylab='Residual')
VarCompResidMCMC <- readRDS("C:/Users/cmp21seb/Documents/SIMAH/SIMAH_workplace/nhis/intersectionality/models/grams_MCMC_full.RDS")
residuals<-VarCompResidMCMC@residual$lev_2_resi_est_Intercept
residualsCI<-1.96*sqrt(VarCompResidMCMC@residual$lev_2_resi_variance_Intercept)
residualsRank<-rank(residuals)
rankno<-order(residualsRank)
caterpillar(y=residuals[rankno],x=1:180,qtlow=(residuals-residualsCI)[rankno],
qtup=(residuals+residualsCI)[rankno],xlab='Intersectional groups (n=180)',ylab='Residual', title="test")
caterpillar(y=residuals[rankno],x=1:180,qtlow=(residuals-residualsCI)[rankno],
qtup=(residuals+residualsCI)[rankno],xlab='Intersectional groups (n=180)',ylab='Residual', ggtitle="test")
caterpillar(y=residuals[rankno],x=1:180,qtlow=(residuals-residualsCI)[rankno],
qtup=(residuals+residualsCI)[rankno],xlab='Intersectional groups (n=180)',ylab='Residual') +
title("test")
caterpillar(y=residuals[rankno],x=1:180,qtlow=(residuals-residualsCI)[rankno],
qtup=(residuals+residualsCI)[rankno],xlab='Intersectional groups (n=180)',ylab='Residual') +
title("Model residuals")+
abline(y=0)
caterpillar(y=residuals[rankno],x=1:180,qtlow=(residuals-residualsCI)[rankno],
qtup=(residuals+residualsCI)[rankno],xlab='Intersectional groups (n=180)',ylab='Residual') +
title("Model residuals")+
abline(h=0)
VarCompResidMCMC <- readRDS("C:/Users/cmp21seb/Documents/SIMAH/SIMAH_workplace/nhis/intersectionality/models/grams_MCMC_full.RDS")
residuals<-VarCompResidMCMC@residual$lev_2_resi_est_Intercept
residualsCI<-1.96*sqrt(VarCompResidMCMC@residual$lev_2_resi_variance_Intercept)
residualsRank<-rank(residuals)
rankno<-order(residualsRank)
caterpillar(y=residuals[rankno],x=1:180,qtlow=(residuals-residualsCI)[rankno],
qtup=(residuals+residualsCI)[rankno],xlab='Intersectional groups (n=180)',ylab='Residual') +
title("Model residuals")+
abline(h=0, col=red)
VarCompResidMCMC <- readRDS("C:/Users/cmp21seb/Documents/SIMAH/SIMAH_workplace/nhis/intersectionality/models/grams_MCMC_full.RDS")
residuals<-VarCompResidMCMC@residual$lev_2_resi_est_Intercept
residualsCI<-1.96*sqrt(VarCompResidMCMC@residual$lev_2_resi_variance_Intercept)
residualsRank<-rank(residuals)
rankno<-order(residualsRank)
caterpillar(y=residuals[rankno],x=1:180,qtlow=(residuals-residualsCI)[rankno],
qtup=(residuals+residualsCI)[rankno],xlab='Intersectional groups (n=180)',ylab='Residual') +
title("Model residuals")+
abline(h=0, col="red"")
caterpillar(y=residuals[rankno],x=1:180,qtlow=(residuals-residualsCI)[rankno],
qtup=(residuals+residualsCI)[rankno],xlab='Intersectional groups (n=180)',ylab='Residual') +
title("Model residuals")+
caterpillar(y=residuals[rankno],x=1:180,qtlow=(residuals-residualsCI)[rankno],
qtup=(residuals+residualsCI)[rankno],xlab='Intersectional groups (n=180)',ylab='Residual') +
title("Model residuals") +
abline(h=0, col="red")
interactions <- interactions %>%
filter(significance_and_direction!="no") %>%
select(intersections, sex, decade, race, age_3_cats, education, residual_lower_CI, residual_upper_CI, significance_and_direction)
interactions %>% count(significance_and_direction="yes, drinks more")
interactions %>% sum(significance_and_direction="yes, drinks more")
interactions %>% tally(significance_and_direction="yes, drinks more")
interactions %>%
group_by(significance_and_direction="yes, drinks more") %>%
count()
interactions %>%
group_by(significance_and_direction) %>%
count()
